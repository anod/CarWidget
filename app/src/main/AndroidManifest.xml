<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:installLocation="internalOnly">

    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />

    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.ANSWER_PHONE_CALLS" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="com.google.android.gms.permission.ACTIVITY_RECOGNITION" />
    <uses-permission android:name="android.permission.ACTIVITY_RECOGNITION" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />

    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />

    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_SPECIAL_USE" />

    <queries>
        <intent>
            <action android:name="android.intent.action.MAIN" />
        </intent>
        <intent>
            <action android:name="android.intent.action.VIEW" />
        </intent>
        <intent>
            <action android:name="android.intent.action.MEDIA_BUTTON" />
        </intent>
        <intent>
            <action android:name="android.intent.action.CALL" />
        </intent>
        <intent>
            <action android:name="android.intent.action.PICK" />
        </intent>
    </queries>

    <uses-feature
        android:name="android.hardware.microphone"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.bluetooth"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.wifi"
        android:required="false" />
    <uses-feature
        android:name="android.software.app_widgets"
        android:required="false" />

    <application
        android:name="com.anod.car.home.CarWidgetApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:ignore="GoogleAppIndexingWarning">

        <activity android:name="com.anod.car.home.OverlayActivity"
            android:clearTaskOnLaunch="true"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleInstance"
            android:noHistory="true"
            android:taskAffinity="com.anod.car.home.overlay"
            android:theme="@style/BrightnessTheme" />

        <activity
            android:name="com.anod.car.home.ShortcutActivity"
            android:clearTaskOnLaunch="true"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleInstance"
            android:noHistory="true"
            android:taskAffinity="com.anod.car.home.shortcut"
            android:theme="@style/BrightnessTheme" />

        <activity
            android:name="com.anod.car.home.prefs.LookAndFeelActivity"
            android:clearTaskOnLaunch="true"
            android:taskAffinity="com.anod.car.home.settings"
            android:theme="@style/AppTheme.SplashScreen"
            android:exported="true">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE" />
            </intent-filter>
        </activity>

        <activity
            android:name="com.anod.car.home.CarHomeActivity"
            android:clearTaskOnLaunch="true"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:taskAffinity="com.anod.car.home.carhome"
            android:theme="@style/BrightnessTheme"
            android:exported="true">
            <meta-data
                android:name="android.dock_home"
                android:value="true" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.CAR_DOCK" />
            </intent-filter>
        </activity>

        <activity
            android:name="com.anod.car.home.incar.ChangeBrightnessActivity"
            android:theme="@style/BrightnessTheme" />

        <activity
            android:name="com.anod.car.home.incar.SwitchInCarActivity"
            android:clearTaskOnLaunch="true"
            android:excludeFromRecents="true"
            android:exported="true"
            android:label="@string/switch_in_car_activity"
            android:launchMode="singleInstance"
            android:noHistory="true"
            android:taskAffinity="com.anod.car.home.switchincar"
            android:theme="@style/BrightnessTheme" />

        <activity
            android:name=".MainActivity"
            android:launchMode="singleTask"
            android:taskAffinity="com.anod.car.home.main"
            android:exported="true"
            android:theme="@style/AppTheme.SplashScreen">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <meta-data
                android:name="android.app.shortcuts"
                android:resource="@xml/shortcuts" />
        </activity>

        <service android:name="com.anod.car.home.incar.ModeService" android:foregroundServiceType="specialUse">
            <property android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="Upon detection of InCar mode, a dedicated service is initiated.
                This service is activated exclusively when the user manually enables In-Car mode through the application's settings.
                Once active, the service applies a series of selected by the user configurations as detailed in the InCar mode section of the widget settings (keep screen on, dynamic brightness adjustment, volume level modification, alteration of screen orientation, etc...)
                These settings are designed to optimize the user experience while the device is operating in a vehicle environment."/>
        </service>
        <service android:name="com.anod.car.home.incar.BroadcastService" android:foregroundServiceType="specialUse">
            <property android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="The application monitors a set of user-selected In-Car mode triggers (power connection, docking events, headset plug-in events, etc).
                 This monitoring functionality is activated only when the user explicitly enables In-Car mode and selects a trigger that necessitates the execution of the BroadcastService.
                 BroadcastService registers ModeBroadcastReceiver which runs checks to start or stop ModeService.
                 This ensures that the application responds appropriately to the user's preferred In-Car mode activation method."/>
        </service>

        <receiver
            android:name="com.anod.car.home.incar.ModeBroadcastReceiver"
            android:enabled="true"
            android:exported="true"
            android:foregroundServiceType="specialUse"
            >
            <property android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="Used by BroadcastService to monitor a set of user-selected In-Car mode triggers (power connection, docking events, headset plug-in events, etc).
                 This monitoring functionality is activated only when the user explicitly enables In-Car mode and selects a trigger that necessitates the execution of the BroadcastService.
                 Upon detection of a configured trigger, the ModeBroadcastReceiver which runs checks to start or stop ModeService.
                 This ensures that the application responds appropriately to the user's preferred In-Car mode activation method."/>
            <intent-filter>
                <action android:name="android.intent.action.HEADSET_PLUG" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />

                <action android:name="android.bluetooth.device.action.ACL_CONNECTED" />
                <action android:name="android.bluetooth.device.action.ACL_DISCONNECTED" />
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />

                <action android:name="com.anod.car.home.incar.ACTION_ACTIVITY_RECOGNITION" />

                <action android:name="android.intent.action.ACTION_DOCK_EVENT" />
                <action android:name="android.app.action.ENTER_CAR_MODE" />
                <action android:name="android.app.action.EXIT_CAR_MODE" />
            </intent-filter>
        </receiver>

        <receiver
            android:exported="true"
            android:name="com.anod.car.home.LargeProvider"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/carhome_appwidget_info_4x4" />
        </receiver>

        <receiver
            android:exported="true"
            android:name="com.anod.car.home.appwidget.ShortcutProvider"
            android:label="@string/in_car_mode_switch">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/carhome_appwidget_info_1x1" />
        </receiver>

        <service
            android:name=".UpdateWidgetJob"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:foregroundServiceType="specialUse"
            >
            <property android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="JobIntentService work service to update app widget when settings are changed"/>
        </service>

        <receiver
            android:name=".BootCompleted"
            android:exported="true"
            android:directBootAware="true" >
            <intent-filter>
                <action android:name="android.intent.action.LOCKED_BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <meta-data
            android:name="com.google.android.backup.api_key"
            android:value="AEdPqrEAAAAIwrTs2H7J2Rs0kglDTHtziqQ8_7YbAZGeS7bDUA" />
        <meta-data
            android:name="preloaded_fonts"
            android:resource="@array/preloaded_fonts" />

        <activity
            android:name=".incar.AcceptCallActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:excludeFromRecents="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/BrightnessTheme" />

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/backup_paths" />
        </provider>

        <!-- acra //-->
        <service
            android:name="org.acra.sender.LegacySenderService"
            android:enabled="@bool/acra_enable_legacy_service"
            android:exported="false"
            android:process=":acra"
            android:foregroundServiceType="specialUse"
            >
            <property android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="Disabled for modern api (22+). This service facilitates the transmission of crash reports generated by the ACRA (Application Crash Reports for Android) library.
                It functions as a dedicated sender service, responsible for packaging and transmitting crash report data to a designated endpoint for analysis and debugging purposes.
                The service operates in the background, ensuring minimal impact on the user experience while reliably relaying critical crash information."/>
        </service>
        <service
            android:name="org.acra.sender.JobSenderService"
            android:enabled="@bool/acra_enable_job_service"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":acra"
            android:foregroundServiceType="specialUse"
            >
            <property android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="his service facilitates the transmission of crash reports generated by the ACRA (Application Crash Reports for Android) library.
                It functions as a dedicated sender service, responsible for packaging and transmitting crash report data to a designated endpoint for analysis and debugging purposes.
                The service operates in the background, ensuring minimal impact on the user experience while reliably relaying critical crash information."/>
        </service>
    </application>
</manifest>